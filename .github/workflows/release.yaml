name: Build and Release GLOS

on:
  push:
    tags:
      - "v*.*.*"  # Ensure it runs when a version tag is pushed

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libglfw3-dev libwayland-dev libxkbcommon-dev libxrandr-dev libxi-dev libudev-dev libxcursor-dev libxinerama-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test ./...

  release:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')  # Ensure it runs only for tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y musl musl-dev libglfw3-dev libwayland-dev libxkbcommon-dev libxrandr-dev libxi-dev libudev-dev libxcursor-dev libxinerama-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        run: |
          CGO_ENABLED=1 CC=musl-gcc go build -tags musl -o glos-linux-amd64

      - name: Archive binary
        run: tar -czvf glos-linux-amd64.tar.gz glos

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Auto-generated release for version ${{ github.ref_name }}"
          draft: false
          prerelease: true
          files: glos-linux-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
