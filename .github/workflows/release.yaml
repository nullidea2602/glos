name: Build and Release GLOS

on:
  push:
    tags:
      - "v*"  # Trigger only when a version tag is pushed
  pull_request:
    branches:
      - dev  # Runs tests on dev and feature branches
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # Ensure GitHub Actions can create releases

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libglfw3-dev libwayland-dev libxkbcommon-dev libxrandr-dev libxi-dev libudev-dev libxcursor-dev libxinerama-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test ./...

  release:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test  # Runs only if tests pass
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures we can get tags

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libglfw3-dev libwayland-dev libxkbcommon-dev libxrandr-dev libxi-dev libudev-dev libxcursor-dev libxinerama-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Determine Version
        id: get_version
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$TAG" ]; then
            TAG="v$(date +'%Y.%m.%d')"
            git tag $TAG
            git push origin $TAG
          fi
          echo "VERSION=$TAG" >> $GITHUB_ENV

      - name: Build binary
        run: |
          go build -o glos main.go  # Change output name if needed

      - name: Archive binary
        run: tar -czvf glos-linux-amd64.tar.gz glos

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: "Auto-generated release for version ${{ env.VERSION }}"
          draft: false
          prerelease: true  # Mark as a pre-release if it's below 1.0.0
          files: glos-linux-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
